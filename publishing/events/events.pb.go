// Code generated by protoc-gen-go. DO NOT EDIT.
// source: events.proto

/*
Package events is a generated protocol buffer package.

It is generated from these files:
	events.proto

It has these top-level messages:
	ArticleCreatedRequest
	ArticleCreatedReply
	ArticleUpdatedRequest
	ArticleUpdatedReply
	ArticleRetractedRequest
	ArticleRetractedReply
	ArticleDraftCreatedRequest
	ArticleDraftCreatedReply
	ArticleDraftUpdatedRequest
	ArticleDraftUpdatedReply
	Article
*/
package events

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ArticleCreatedRequest struct {
	Article   *Article                   `protobuf:"bytes,1,opt,name=article" json:"article,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ArticleCreatedRequest) Reset()                    { *m = ArticleCreatedRequest{} }
func (m *ArticleCreatedRequest) String() string            { return proto.CompactTextString(m) }
func (*ArticleCreatedRequest) ProtoMessage()               {}
func (*ArticleCreatedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ArticleCreatedRequest) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

func (m *ArticleCreatedRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ArticleCreatedReply struct {
}

func (m *ArticleCreatedReply) Reset()                    { *m = ArticleCreatedReply{} }
func (m *ArticleCreatedReply) String() string            { return proto.CompactTextString(m) }
func (*ArticleCreatedReply) ProtoMessage()               {}
func (*ArticleCreatedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ArticleUpdatedRequest struct {
	Article   *Article                   `protobuf:"bytes,1,opt,name=article" json:"article,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ArticleUpdatedRequest) Reset()                    { *m = ArticleUpdatedRequest{} }
func (m *ArticleUpdatedRequest) String() string            { return proto.CompactTextString(m) }
func (*ArticleUpdatedRequest) ProtoMessage()               {}
func (*ArticleUpdatedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ArticleUpdatedRequest) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

func (m *ArticleUpdatedRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ArticleUpdatedReply struct {
}

func (m *ArticleUpdatedReply) Reset()                    { *m = ArticleUpdatedReply{} }
func (m *ArticleUpdatedReply) String() string            { return proto.CompactTextString(m) }
func (*ArticleUpdatedReply) ProtoMessage()               {}
func (*ArticleUpdatedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type ArticleRetractedRequest struct {
	Article   *Article                   `protobuf:"bytes,1,opt,name=article" json:"article,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ArticleRetractedRequest) Reset()                    { *m = ArticleRetractedRequest{} }
func (m *ArticleRetractedRequest) String() string            { return proto.CompactTextString(m) }
func (*ArticleRetractedRequest) ProtoMessage()               {}
func (*ArticleRetractedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ArticleRetractedRequest) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

func (m *ArticleRetractedRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ArticleRetractedReply struct {
}

func (m *ArticleRetractedReply) Reset()                    { *m = ArticleRetractedReply{} }
func (m *ArticleRetractedReply) String() string            { return proto.CompactTextString(m) }
func (*ArticleRetractedReply) ProtoMessage()               {}
func (*ArticleRetractedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type ArticleDraftCreatedRequest struct {
	Article   *Article                   `protobuf:"bytes,1,opt,name=article" json:"article,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ArticleDraftCreatedRequest) Reset()                    { *m = ArticleDraftCreatedRequest{} }
func (m *ArticleDraftCreatedRequest) String() string            { return proto.CompactTextString(m) }
func (*ArticleDraftCreatedRequest) ProtoMessage()               {}
func (*ArticleDraftCreatedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ArticleDraftCreatedRequest) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

func (m *ArticleDraftCreatedRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ArticleDraftCreatedReply struct {
}

func (m *ArticleDraftCreatedReply) Reset()                    { *m = ArticleDraftCreatedReply{} }
func (m *ArticleDraftCreatedReply) String() string            { return proto.CompactTextString(m) }
func (*ArticleDraftCreatedReply) ProtoMessage()               {}
func (*ArticleDraftCreatedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

type ArticleDraftUpdatedRequest struct {
	Article   *Article                   `protobuf:"bytes,1,opt,name=article" json:"article,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *ArticleDraftUpdatedRequest) Reset()                    { *m = ArticleDraftUpdatedRequest{} }
func (m *ArticleDraftUpdatedRequest) String() string            { return proto.CompactTextString(m) }
func (*ArticleDraftUpdatedRequest) ProtoMessage()               {}
func (*ArticleDraftUpdatedRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ArticleDraftUpdatedRequest) GetArticle() *Article {
	if m != nil {
		return m.Article
	}
	return nil
}

func (m *ArticleDraftUpdatedRequest) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type ArticleDraftUpdatedReply struct {
}

func (m *ArticleDraftUpdatedReply) Reset()                    { *m = ArticleDraftUpdatedReply{} }
func (m *ArticleDraftUpdatedReply) String() string            { return proto.CompactTextString(m) }
func (*ArticleDraftUpdatedReply) ProtoMessage()               {}
func (*ArticleDraftUpdatedReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type Article struct {
	Id         uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title      string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Body       string `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	Category   string `protobuf:"bytes,4,opt,name=category" json:"category,omitempty"`
	AuthorId   uint32 `protobuf:"varint,5,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	AuthorName string `protobuf:"bytes,6,opt,name=author_name,json=authorName" json:"author_name,omitempty"`
}

func (m *Article) Reset()                    { *m = Article{} }
func (m *Article) String() string            { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()               {}
func (*Article) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Article) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Article) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *Article) GetAuthorId() uint32 {
	if m != nil {
		return m.AuthorId
	}
	return 0
}

func (m *Article) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func init() {
	proto.RegisterType((*ArticleCreatedRequest)(nil), "events.ArticleCreatedRequest")
	proto.RegisterType((*ArticleCreatedReply)(nil), "events.ArticleCreatedReply")
	proto.RegisterType((*ArticleUpdatedRequest)(nil), "events.ArticleUpdatedRequest")
	proto.RegisterType((*ArticleUpdatedReply)(nil), "events.ArticleUpdatedReply")
	proto.RegisterType((*ArticleRetractedRequest)(nil), "events.ArticleRetractedRequest")
	proto.RegisterType((*ArticleRetractedReply)(nil), "events.ArticleRetractedReply")
	proto.RegisterType((*ArticleDraftCreatedRequest)(nil), "events.ArticleDraftCreatedRequest")
	proto.RegisterType((*ArticleDraftCreatedReply)(nil), "events.ArticleDraftCreatedReply")
	proto.RegisterType((*ArticleDraftUpdatedRequest)(nil), "events.ArticleDraftUpdatedRequest")
	proto.RegisterType((*ArticleDraftUpdatedReply)(nil), "events.ArticleDraftUpdatedReply")
	proto.RegisterType((*Article)(nil), "events.Article")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Gateway service

type GatewayClient interface {
	// ArticleCreated accepts ArticleCreated events
	ArticleCreated(ctx context.Context, in *ArticleCreatedRequest, opts ...grpc.CallOption) (*ArticleCreatedReply, error)
	// ArticleUpdated accepts ArticleUpdated events
	ArticleUpdated(ctx context.Context, in *ArticleUpdatedRequest, opts ...grpc.CallOption) (*ArticleUpdatedReply, error)
	// ArticleRetracted accepts ArticleRetracted events
	ArticleRetracted(ctx context.Context, in *ArticleRetractedRequest, opts ...grpc.CallOption) (*ArticleRetractedReply, error)
	// ArticleDraftCreated accepts ArticleDraftCreated events
	ArticleDraftCreated(ctx context.Context, in *ArticleDraftCreatedRequest, opts ...grpc.CallOption) (*ArticleDraftCreatedReply, error)
	// ArticleDraftUpdated accepts ArticleDraftUpdated events
	ArticleDraftUpdated(ctx context.Context, in *ArticleDraftUpdatedRequest, opts ...grpc.CallOption) (*ArticleDraftUpdatedReply, error)
}

type gatewayClient struct {
	cc *grpc.ClientConn
}

func NewGatewayClient(cc *grpc.ClientConn) GatewayClient {
	return &gatewayClient{cc}
}

func (c *gatewayClient) ArticleCreated(ctx context.Context, in *ArticleCreatedRequest, opts ...grpc.CallOption) (*ArticleCreatedReply, error) {
	out := new(ArticleCreatedReply)
	err := grpc.Invoke(ctx, "/events.Gateway/ArticleCreated", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) ArticleUpdated(ctx context.Context, in *ArticleUpdatedRequest, opts ...grpc.CallOption) (*ArticleUpdatedReply, error) {
	out := new(ArticleUpdatedReply)
	err := grpc.Invoke(ctx, "/events.Gateway/ArticleUpdated", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) ArticleRetracted(ctx context.Context, in *ArticleRetractedRequest, opts ...grpc.CallOption) (*ArticleRetractedReply, error) {
	out := new(ArticleRetractedReply)
	err := grpc.Invoke(ctx, "/events.Gateway/ArticleRetracted", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) ArticleDraftCreated(ctx context.Context, in *ArticleDraftCreatedRequest, opts ...grpc.CallOption) (*ArticleDraftCreatedReply, error) {
	out := new(ArticleDraftCreatedReply)
	err := grpc.Invoke(ctx, "/events.Gateway/ArticleDraftCreated", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *gatewayClient) ArticleDraftUpdated(ctx context.Context, in *ArticleDraftUpdatedRequest, opts ...grpc.CallOption) (*ArticleDraftUpdatedReply, error) {
	out := new(ArticleDraftUpdatedReply)
	err := grpc.Invoke(ctx, "/events.Gateway/ArticleDraftUpdated", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Gateway service

type GatewayServer interface {
	// ArticleCreated accepts ArticleCreated events
	ArticleCreated(context.Context, *ArticleCreatedRequest) (*ArticleCreatedReply, error)
	// ArticleUpdated accepts ArticleUpdated events
	ArticleUpdated(context.Context, *ArticleUpdatedRequest) (*ArticleUpdatedReply, error)
	// ArticleRetracted accepts ArticleRetracted events
	ArticleRetracted(context.Context, *ArticleRetractedRequest) (*ArticleRetractedReply, error)
	// ArticleDraftCreated accepts ArticleDraftCreated events
	ArticleDraftCreated(context.Context, *ArticleDraftCreatedRequest) (*ArticleDraftCreatedReply, error)
	// ArticleDraftUpdated accepts ArticleDraftUpdated events
	ArticleDraftUpdated(context.Context, *ArticleDraftUpdatedRequest) (*ArticleDraftUpdatedReply, error)
}

func RegisterGatewayServer(s *grpc.Server, srv GatewayServer) {
	s.RegisterService(&_Gateway_serviceDesc, srv)
}

func _Gateway_ArticleCreated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleCreatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).ArticleCreated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.Gateway/ArticleCreated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).ArticleCreated(ctx, req.(*ArticleCreatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_ArticleUpdated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleUpdatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).ArticleUpdated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.Gateway/ArticleUpdated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).ArticleUpdated(ctx, req.(*ArticleUpdatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_ArticleRetracted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleRetractedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).ArticleRetracted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.Gateway/ArticleRetracted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).ArticleRetracted(ctx, req.(*ArticleRetractedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_ArticleDraftCreated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleDraftCreatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).ArticleDraftCreated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.Gateway/ArticleDraftCreated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).ArticleDraftCreated(ctx, req.(*ArticleDraftCreatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Gateway_ArticleDraftUpdated_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArticleDraftUpdatedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GatewayServer).ArticleDraftUpdated(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.Gateway/ArticleDraftUpdated",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GatewayServer).ArticleDraftUpdated(ctx, req.(*ArticleDraftUpdatedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Gateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "events.Gateway",
	HandlerType: (*GatewayServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ArticleCreated",
			Handler:    _Gateway_ArticleCreated_Handler,
		},
		{
			MethodName: "ArticleUpdated",
			Handler:    _Gateway_ArticleUpdated_Handler,
		},
		{
			MethodName: "ArticleRetracted",
			Handler:    _Gateway_ArticleRetracted_Handler,
		},
		{
			MethodName: "ArticleDraftCreated",
			Handler:    _Gateway_ArticleDraftCreated_Handler,
		},
		{
			MethodName: "ArticleDraftUpdated",
			Handler:    _Gateway_ArticleDraftUpdated_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "events.proto",
}

func init() { proto.RegisterFile("events.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x53, 0x4d, 0x4f, 0xea, 0x40,
	0x14, 0xa5, 0x7c, 0x73, 0x79, 0x8f, 0xf7, 0x32, 0x4a, 0x68, 0x86, 0x10, 0x08, 0x2b, 0xdd, 0x94,
	0x04, 0x37, 0x6e, 0x8d, 0x26, 0xc6, 0x0d, 0x8b, 0x06, 0x97, 0xc6, 0x0c, 0xf4, 0x82, 0x4d, 0x5a,
	0x5a, 0xcb, 0xa0, 0x69, 0x62, 0x4c, 0xfc, 0x21, 0xfe, 0x14, 0xff, 0x9b, 0x61, 0xa6, 0xad, 0xed,
	0x50, 0x58, 0xca, 0xae, 0x73, 0xef, 0x99, 0x73, 0x4e, 0xef, 0xb9, 0x03, 0x7f, 0xf0, 0x05, 0x57,
	0x7c, 0x6d, 0xf8, 0x81, 0xc7, 0x3d, 0x52, 0x95, 0x27, 0xda, 0x5f, 0x7a, 0xde, 0xd2, 0xc1, 0x91,
	0xa8, 0xce, 0x36, 0x8b, 0x11, 0xb7, 0x5d, 0x5c, 0x73, 0xe6, 0xfa, 0x12, 0x38, 0x7c, 0x83, 0xf6,
	0x55, 0xc0, 0xed, 0xb9, 0x83, 0xd7, 0x01, 0x32, 0x8e, 0x96, 0x89, 0xcf, 0x1b, 0x5c, 0x73, 0x72,
	0x0e, 0x35, 0x26, 0x1b, 0xba, 0x36, 0xd0, 0xce, 0x9a, 0xe3, 0x7f, 0x46, 0xa4, 0x10, 0xe1, 0xcd,
	0xb8, 0x4f, 0x2e, 0xa1, 0x91, 0xd0, 0xea, 0x45, 0x01, 0xa6, 0x86, 0x14, 0x36, 0x62, 0x61, 0x63,
	0x1a, 0x23, 0xcc, 0x1f, 0xf0, 0xb0, 0x0d, 0x27, 0xaa, 0xba, 0xef, 0x84, 0x29, 0x53, 0xf7, 0xbe,
	0x75, 0x44, 0x53, 0x89, 0xfa, 0xd6, 0xd4, 0x3b, 0x74, 0x62, 0x11, 0xe4, 0x01, 0x9b, 0xff, 0xb6,
	0xad, 0x4e, 0x32, 0x94, 0x94, 0xfe, 0xd6, 0xd8, 0x87, 0x06, 0x34, 0xea, 0xdc, 0x04, 0x6c, 0xc1,
	0x8f, 0x11, 0x24, 0x05, 0x3d, 0xd7, 0x42, 0x9e, 0xbf, 0x63, 0x64, 0xaa, 0xf8, 0xcb, 0x04, 0xfb,
	0xa9, 0x41, 0x2d, 0x6a, 0x92, 0x16, 0x14, 0x6d, 0x4b, 0xf8, 0xf8, 0x6b, 0x16, 0x6d, 0x8b, 0x9c,
	0x42, 0x85, 0xdb, 0xdc, 0x41, 0xa1, 0xd6, 0x30, 0xe5, 0x81, 0x10, 0x28, 0xcf, 0x3c, 0x2b, 0xd4,
	0x4b, 0xa2, 0x28, 0xbe, 0x09, 0x85, 0xfa, 0x9c, 0x71, 0x5c, 0x7a, 0x41, 0xa8, 0x97, 0x45, 0x3d,
	0x39, 0x93, 0x2e, 0x34, 0xd8, 0x86, 0x3f, 0x79, 0xc1, 0xa3, 0x6d, 0xe9, 0x15, 0x41, 0x5e, 0x97,
	0x85, 0x3b, 0x8b, 0xf4, 0xa1, 0x19, 0x35, 0x57, 0xcc, 0x45, 0xbd, 0x2a, 0xee, 0x82, 0x2c, 0x4d,
	0x98, 0x8b, 0xe3, 0xaf, 0x12, 0xd4, 0x6e, 0x19, 0xc7, 0x57, 0x16, 0x92, 0x09, 0xb4, 0xb2, 0x0f,
	0x86, 0xf4, 0x94, 0x69, 0x65, 0xd3, 0xa7, 0xdd, 0x7d, 0xed, 0xed, 0x9f, 0x17, 0x52, 0x7c, 0xd1,
	0x48, 0x76, 0xf8, 0xb2, 0x69, 0xed, 0xf0, 0x65, 0x26, 0x59, 0x20, 0x53, 0xf8, 0xaf, 0x2e, 0x29,
	0xe9, 0xab, 0x79, 0x2a, 0xcf, 0x87, 0xf6, 0xf6, 0x03, 0x24, 0xeb, 0x43, 0xf2, 0x22, 0xd3, 0xdb,
	0x45, 0x86, 0xca, 0xbd, 0x9c, 0xed, 0xa7, 0x83, 0x83, 0x98, 0x5c, 0xfa, 0x78, 0x12, 0xb9, 0xf4,
	0xca, 0x38, 0x06, 0x07, 0x31, 0x82, 0x7e, 0x56, 0x15, 0xab, 0x79, 0xf1, 0x1d, 0x00, 0x00, 0xff,
	0xff, 0x6f, 0x8f, 0x2a, 0xdd, 0xa2, 0x05, 0x00, 0x00,
}
